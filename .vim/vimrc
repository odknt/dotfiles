" =========================================================================
" initialize
"

" init all settings
set all&
au!

if $XDG_CONFIG_HOME ==# ''
    let $XDG_CONFIG_HOME = expand($HOME.'/.config')
endif

let s:is_windows = has('win16') || has('win32') || has('win64')

if s:is_windows
	let g:vim_config_home = $VIM
	let g:dein_cache_dir = expand($VIM.'/.cache/dein.vim')
elseif has('nvim')
	let g:vim_config_home = expand($XDG_CONFIG_HOME.'/nvim')
	let g:dein_cache_dir = expand($HOME.'/.cache/dein.vim')
else
	let g:vim_config_home = expand($HOME.'/.vim')
	let g:dein_cache_dir = expand($HOME.'/.cache/dein.vim')
endif

" =========================================================================
" function
"
" Load Fragment
function! s:load_flagments(path)
    let l:file_path = expand(g:vim_config_home . '/frags/' . a:path)
    let g:hogehoge = l:file_path
    if filereadable(l:file_path)
        execute 'source' fnameescape(l:file_path)
    endif
endfunction

" =========================================================================
" encoding
"
call s:load_flagments('encoding.vim')

" =========================================================================
" finish if vim feature is tiny or small
"
if !1 | finish | endif

" =========================================================================
" plugins
"
if has('vim_starting')
    " dein.vim core
    let &runtimepath .= expand(',' . g:dein_cache_dir . '/repos/github.com/Shougo/dein.vim')
    if !isdirectory(expand(g:dein_cache_dir . '/repos/github.com/Shougo/dein.vim'))
        echo 'install dein.vim...'
        call system('mkdir -p ' . g:dein_cache_dir . '/repos/github.com/Shougo/dein.vim')
        call system('git clone https://github.com/Shougo/dein.vim.git ' . g:dein_cache_dir . '/repos/github.com/Shougo/dein.vim')
    endif
endif

call g:dein#begin(g:dein_cache_dir)

let s:toml_path = expand(g:vim_config_home . '/bundles.toml')
let s:toml_lazy_path = expand(g:vim_config_home . '/bundles_lazy.toml')
if g:dein#load_cache([expand('<sfile>'), s:toml_path, s:toml_lazy_path])
    call g:dein#load_toml(s:toml_path, {'lazy': 0})
    call g:dein#load_toml(s:toml_lazy_path, {'lazy': 1})

    call g:dein#save_cache()
endif

call s:load_flagments('plugins.vim')

call g:dein#end()

if g:dein#check_install()
    call g:dein#install()
endif

filetype plugin indent on

" =========================================================================
" edit settings
"
call s:load_flagments('edit.vim')

" =========================================================================
" autocmd settings
"
call s:load_flagments('autocmds.vim')

" =========================================================================
" visual setting
"
call s:load_flagments('visual.vim')

" =========================================================================
" gui settings
"
if has('gui_running')
    call s:load_flagments('gui.vim')
endif

" =========================================================================
" for windows
"
if s:is_windows
    call s:load_flagments('windows.vim')
endif

" =========================================================================
" key mappings
"
call s:load_flagments('mappings.vim')
if has('nvim')
    call s:load_flagments('mappings.nvim')
endif

" =========================================================================
" local settings
"
call s:load_flagments('local.vim')
