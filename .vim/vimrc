if has('vim_starting')
    set encoding=utf-8
endif
scriptencoding utf-8
set fileencoding=utf-8 fileencodings=utf-8 bomb binary
set smartindent autoindent
set ruler nonumber
set nocompatible nostartofline
set noequalalways splitbelow splitright
set lazyredraw ttyfast novisualbell t_ut=
set background=dark display=lastline
set mouse=

hi SpecialKey ctermbg=none ctermfg=12
if &encoding ==? 'utf-8'
    exec "set fillchars=vert:\u23AE,fold:\u23BC,diff:\u23BC"
    set list listchars=tab:･\ ,trail:-,extends:»,precedes:«,nbsp:%
else
    exec 'set list fillchars=vert:\|,fold:-,diff:.'
endif
hi VertSplit ctermfg=black ctermbg=61

set grepformat=%f:%l:%m
set grepprg=ag\ --nogroup\ --nocolor\ -iS
command! -nargs=+ NewGrep execute 'silent grep! <args>' | copen 42

function! s:mkdir_if_doesnt_exists(dir)
    if !isdirectory(expand(a:dir))
       call mkdir(expand(a:dir), 'p')
    endif
endfunction
call s:mkdir_if_doesnt_exists('~/.cache/vim/swap')
set directory=~/.cache/vim/swap

" statusline
set cmdheight=2 laststatus=2
set showmode modeline modelines=10
let &statusline="%{winnr('$')>1?'['.winnr().'/'.winnr('$')"
    \ . ".(winnr('#')==winnr()?'#':'').']':''}\ "
    \ . "%{(&previewwindow?'[preview] ':'').expand('%:t')}\ %m"
    \ . "\ %=%{len(getloclist(0))?'E:\ '.len(getloclist(0)):''}"
    \ . "\ %{(winnr('$')==1 || winnr('#')!=winnr()) ? '['.(&filetype!=''?&filetype.',':'')"
    \ . ".(&fenc!=''?&fenc:&enc).','.&ff.']' : ''}"
    \ . "%{printf('%'.(len(line('$'))+2).'d/%d',line('.'),line('$'))}"

" word wrap
set linebreak showbreak=\\ breakat=\ \ ;:,!?
if exists('+breakindent')
  set wrap breakindent
else
  set nowrap
endif

" search
set nohlsearch incsearch ignorecase smartcase wrapscan noshowmatch

" clipboard
if ('unnnamedplus')
    set clipboard+=unnamedplus
else
    set clipboard+=unnamed
endif

" completion
set completeopt=menuone complete=. pumheight=20

" tags
set tags+=.tags
set tags+=.TAGS

" dictionaries
set dictionary=/usr/share/dict/words
set thesaurus=/usr/share/mythes/th_en_US_v2.dat

" macro
let @d = ':bp|bw! #'

" keybind
let g:mapleader="\<Space>"
nnoremap <leader><C-l> :<C-u>Unite gtags/file<CR>
nnoremap <leader><C-g> :<C-u>Unite gtags/grep<CR>
nnoremap <leader><C-]> :<C-u>Unite gtags/def<CR>
vnoremap <leader><C-]> :<C-u>Unite gtags/def<CR>
nnoremap <leader><C-k> :<C-u>Unite gtags/ref<CR>
vnoremap <leader><C-k> :<C-u>Unite gtags/ref<CR>
nnoremap <leader>/ :<C-u>Unite gtags/completion<CR>

" autocmd
augroup vimrc_gtags
  au!
  au FileType java,php,go :packadd gen_tags.vim
  au FileType java,php,go :packadd unite-gtags
  au FileType java,php,go :packadd unite-gtags-custom
  au FileType java,php,go :packadd unite-gtags-custom
  au FileType markdown    :packadd livemark.vim
augroup END

let g:livemark_browser = $BROWSER

filetype plugin indent on
