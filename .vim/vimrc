if has('vim_starting')
  set encoding=utf-8
endif
scriptencoding utf-8
set fileencoding=utf-8 fileencodings=utf-8,sjis,enc-jp bomb binary nofixendofline
filetype off
filetype plugin indent off
set smartindent autoindent
set ruler nonumber regexpengine=1
set nocompatible nostartofline nowritebackup notitle
set noequalalways splitbelow splitright
set lazyredraw ttyfast novisualbell t_ut= belloff=all
set background=dark display=lastline textwidth=0
set mouse=
set completeopt=menuone complete=. pumheight=20
set nohlsearch incsearch ignorecase smartcase wrapscan noshowmatch
set dictionary=/usr/share/dict/words
set thesaurus=/usr/share/mythes/th_en_US_v2.dat
set emoji ambiwidth=double
set switchbuf=usetab,newtab

hi SpecialKey ctermbg=none ctermfg=12
if &encoding ==? 'utf-8'
  exec "set fillchars=vert:\u23AE,fold:\u23BC,diff:\u23BC"
  set list listchars=tab:˫\ ,trail:-,extends:»,precedes:«,nbsp:%
else
  exec 'set list fillchars=vert:\|,fold:-,diff:.'
endif
hi VertSplit ctermfg=black ctermbg=61

if executable('rg')
  set grepformat=%f:%l:%c:%m,%f:%l:%m
  set grepprg=rg\ --vimgrep\ --no-heading
endif
command! -nargs=+ Grep execute 'silent grep! <args>' | copen 20

function! s:mkdir_if_doesnt_exists(dir)
  if !isdirectory(expand(a:dir))
    call mkdir(expand(a:dir), 'p')
  endif
endfunction
call s:mkdir_if_doesnt_exists('~/.cache/vim/swap')
set directory=~/.cache/vim/swap

set cmdheight=1 laststatus=0
set showmode modeline modelines=10

set linebreak showbreak=> breakat=\ \ ;:,!?
if exists('+breakindent')
  set wrap breakindent breakindentopt=shift:4,sbr
else
  set nowrap
endif

if has('unnamedplus')
    set clipboard^=unnamedplus
else
    set clipboard^=unnamed
endif

let g:mapleader="\<Space>"
nnoremap <silent> <leader><C-l> :<C-u>Unite gtags/file<CR>
nnoremap <silent> <leader><C-g> :<C-u>Unite gtags/grep<CR>
nnoremap <silent> <leader><C-]> :<C-u>Unite gtags/def<CR>
vnoremap <silent> <leader><C-]> :<C-u>Unite gtags/def<CR>
nnoremap <silent> <leader><C-k> :<C-u>Unite gtags/ref<CR>
vnoremap <silent> <leader><C-k> :<C-u>Unite gtags/ref<CR>
nnoremap <silent> <leader>/ :<C-u>Unite gtags/completion<CR>
nnoremap <silent> <C-]> :<C-u>tab stj <C-R>=expand('<cword>')<CR><CR>

augroup on_filetype
  au!
  au FileType c,java,php,go :packadd gen_tags.vim
  au FileType c,java,php,go :packadd unite-gtags
augroup END

if has('vim_starting')
  let s:repo_dir = substitute(system('git rev-parse --show-toplevel'), '\\', '/', 'g')
  let s:repo_dir = substitute(s:repo_dir, '\n', '', 'g')
  let s:tag_file = expand('~/.cache/tags_dir/') . substitute(s:repo_dir, '/', '', 'g'). '/prj_tags'
  let &tags .= ',' . s:tag_file
endif

let @d = ':bp|bw! #'
let g:ctrlp_match_func = { 'match': 'cpsm#CtrlPMatch' }
let g:ctrlp_custom_ignore = { 'dir': '\v[\/](\.git|\.hg|\.svn|node_modules|bower_components|vendors|vendor|target)', 'file': '\v\.(exe|so|dll|class|a|o)' }

if filereadable(expand('~/.vim/vimrc-local'))
  source ~/.vim/vimrc-local
endif

filetype plugin on
