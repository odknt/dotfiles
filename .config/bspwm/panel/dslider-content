#!/bin/bash
# vim: sw=2 ts=2 sts=2 et

. "${0%/*}/profile"

dzenpid=$(cat "${DZEN_POPUP_PATH}")
dzenpid="${dzenpid:2}"

if [ $1 == "Mu" ]; then # The music popup is NOT a slider, so it must be treated separately
    title="Music "
    message=" ^ca(1,coverart)^fg(#A73E28)^ca()^ca(1,termite -e 'mpdviz -i true')^fg(#99704A)^ca()^ca(1,termite -e ncmpcpp &)^fg(#878438)^ca()   "
else
    case $1 in
        Vl) # Master volume
            currentValue="$(amixer -q | grep -A5 Master | grep '%' | cut -d'[' -f2 | cut -d'%' -f1)"
            maxValue=100
            title="Master"
            ;;
        Sc) # Screen brightness
            currentValue="$(cat "${brightness_path}")"
            maxValue="$(cat "${maxbrightness_path}")"
            title="Screen"
            ;;
    esac

    currentValue="$(( currentValue * 10 / maxValue ))"

    ## MAKE THE SLIDER ##
    slider="^fg(${DZEN_SEL})"
    for i in {1..10}; do
        # Add the command to change the value
        slider+="^ca(1,"
        case $1 in
            Vl) # PCM channel volume
                slider+="amixer set Master $(( i * maxValue / 10 ))% > /dev/null"
                ;;
            Sc) # Screen brightness
                slider+="sudo mbp_backlight $(( i * maxValue / 10 ))"
                ;;
        esac
        slider+=" ; dslider-content $1 &)"

        # Draw the slider
        if [ "${i}" -gt "${currentValue}" ]; then
            slider+="${EMPTY_SLIDER}"
        elif [ "${i}" -eq "${currentValue}" ]; then
            slider+="${INDICATOR_SLIDER}^fg(${DZEN_EMPTY})"
        else
            slider+="${FULL_SLIDER}"
        fi

        # Finish the value changing command
        slider+="^ca()"
    done
    slider+="^fg()"

    message="${slider}"
fi

# Add close button and send the message to the fifo read by dzen
echo " ${title} ${message}  ^ca(1,dslider close)^fg(${DZEN_CLOSE}) ⮽^fg()^ca()" > /tmp/dzen-fifo
